@dc:title "Example Vocabulary"
@dc:creator "Example Company"
@dc:rights "Copyright 2019, by Example Company"
vocabulary <http://opencaesar.io/template/vocabulary/DDT/DynamicDrivingTasks#> as DynamicDrivingTasks {

	extends <http://purl.org/dc/elements/1.1/> as dc
    extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs
    extends <http://www.w3.org/2001/XMLSchema#> as xsd
    extends <http://www.w3.org/2003/11/swrlb#> as swrlb
    extends <http://opencaesar.io/template/vocabulary/ADSdomain#> as adsdomain


	// extends <http://opencaesar.io/template/vocabulary/ADSdomain#> as ADSdomain
    extends <http://imce.jpl.nasa.gov/foundation/mission#> as mission

    concept DynamicDrivingTask < mission:Objective

	@rdfs:label "Parking"
	@dc:description "ADS comes to a complete stop within a vacant parking spot; may be further qualified by parallel or perpendicular orientations, lot type (closed/open), initiation conditions, etc."
    concept Parking < DynamicDrivingTask

	@rdfs:label "Low-Speed Merge"
    @dc:description "ADS merges into a lane below about 45 mph, for example from
    an exit ramp, by identifying a vacant lane position and matching speed."
    concept Low-Speed-Merge  < DynamicDrivingTask[
        restricts maxVelocity to exactly 1
    ]


	scalar property maxVelocity[
		domain DynamicDrivingTask
		range xsd:float
		functional
	]

    aspect NotValidVel
    // // concept notValidMaxVelocityOfDDT < Low-Speed-Merge

    // ?ddttask ddt:maxVelocity ?v;
    //          ads:isPerformedBy [ ads:isEquippedTo [ads:hasVelocity[ ads:hasFloatNumber ?vel]]];

	// // swrlbを用いて最大Displacementの要求を満足しない場合、要求にnotValidMaxDisplacementRequirementと識別。
	rule low-speed-merge-velocity[
        maxVelocity(ddt, vmax) &
         adsdomain:isPerformedBy(ddt, ads) &
          adsdomain:isEquippedTo(ads, sv) & 
           adsdomain:hasVelocity(sv, vel) &
            adsdomain:hasFloatNumber(vel, value) &
             builtIn ( swrlb:lessThan, vmax, value) -> NotValidVel(vel)
    ]


}
