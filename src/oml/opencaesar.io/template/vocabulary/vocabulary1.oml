@dc:title "Example Vocabulary"
@dc:creator "Example Company"
@dc:rights "Copyright 2019, by Example Company"
vocabulary <http://opencaesar.io/template/vocabulary/vocabulary1#> as vocabulary1 {

	extends <http://purl.org/dc/elements/1.1/> as dc

	extends <http://bipm.org/jcgm/vim4#> as vim4

	uses <http://iso.org/iso-80000-3.4#> as iso-80000-3.4

	extends <http://imce.jpl.nasa.gov/foundation/mission#> as mission

	uses <http://opencaesar.io/template/description/metrology#> as metrology-description

	concept Car < mission:Component [
		// restricts hasEngine to exactly 1
		restricts hasEngine to min 1
	]

	concept Engine < mission:Component, vim4:Object [
		restricts hasDisplacement to min 1
	]


	concept Navigation < mission:Component[
		restricts hasNaviData to min 1
	]

	concept Navi < Navigation
	



	



	concept CX-8 < Car [
		restricts all hasEngine to SR14
	]

	concept CX-9 < Car [
		restricts all hasEngine to SR14
	]

	concept SR14 < Engine

	relation entity IsEngineOf [
		from Engine
		to Car
		forward isEngineOf
		reverse hasEngine
		functional
	]


    concept Wiper < mission:Component

	relation entity IsWiperOf [
		from Wiper
		to Car
		forward isWiperOf
		reverse hasWiper
		functional

]
	relation entity IsNavigationOf[
		from Navigation
		to Car
		forward isNavigationOf
		reverse hasNavigation
	]

	concept SeatBelt < mission:Component

	relation entity IsSeatBeltOf [
		from SeatBelt
		to Car
		forward isSeatBeltOf
		reverse hasSeatBelt
  ]
	concept Window < mission:Component
	relation entity IsWindowOf [
		from Window
		to Car
		forward isWindowOf
		reverse hasWindow
		functional


	]

	// concept Displacement < vim4:InherentUnitaryQuantity [
	// 	restricts vim4:instantiates to iso-80000-3.4:volume
	// ]

	concept LE9 < Engine


	// concept NaviData < vim4:UnitaryQuantityValue [
	// 	restricts vim4:instantiates to iso-80000-3.4:volume
	// 	restricts vim4:unit to metrology-description:cc
	// ]
concept NaviData <  mission:Component
	relation entity IsNaviDataOf [
		from NaviData
		to Navigation
		forward isNaviDataOf
		reverse hasNaviData
	] //< vim4:Characterizes

	concept Displacement < vim4:UnitaryQuantityValue [
		restricts vim4:instantiates to iso-80000-3.4:volume
		restricts vim4:unit to metrology-description:cc
	]

	relation entity IsDisplacementOf [
		from Displacement
		to Engine
		forward isDisplacementOf
		reverse hasDisplacement
	] < vim4:Characterizes




	concept Handle < mission:Component, vim4:Object [
		restricts hasMaterial to min 1
	]

    concept type01 < Handle

	relation entity IsHandleOf [
		from Handle
		to Car
		forward isHandleOf
		reverse hasHandle
		functional
	]

	concept Material < vim4:UnitaryQuantityValue [
		restricts vim4:instantiates to iso-80000-3.4:volume
		restricts vim4:unit to metrology-description:cc
	]


	relation entity IsMaterialOf [
		from Material
		to Handle
		forward isMaterialOf
		reverse hasMaterial
	] < vim4:Characterizes

}
