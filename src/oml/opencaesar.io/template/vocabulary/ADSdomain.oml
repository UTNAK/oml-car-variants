@dc:title "Example Vocabulary"
@dc:creator "Example Company"
@dc:rights "Copyright 2019, by Example Company"
vocabulary <http://opencaesar.io/template/vocabulary/ADSdomain#> as ADSdomain {
    extends <http://www.w3.org/2001/XMLSchema#> as xsd

	extends <http://purl.org/dc/elements/1.1/> as dc
	extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs
    extends <http://bipm.org/jcgm/vim4#> as vim4
    




	extends <http://imce.jpl.nasa.gov/foundation/mission#> as mission


	concept AutomatedDrivingSystemDomain < mission:Component [
        restricts hasAV to exactly 1
	]

    concept JASPARODD  < mission:Component [

    ]

    concept AutomatedDrivingSystem < mission:Component, connectedElement [

    ]

    concept AutomatedVehicle < Vehicle [

    ]

    concept Vehicle < vim4:Object [
        restricts hasPos-X to exactly 1
        restricts hasPos-Y to exactly 1
        restricts hasPos-Z to exactly 1
        restricts hasVelocity to exactly 1
    ]
    aspect CarlaParameter < vim4:QuantityValue

    @rdfs:label "hasFloatNumber"
    scalar property hasFloatNumber [
      domain CarlaParameter
      range xsd:float
      functional
    ]
    @rdfs:label "hasString"
    scalar property hasString [
        domain CarlaParameter
        range xsd:string
        functional
        ]   

    concept Pos-X < CarlaParameter[
      restricts all vim4:characterizes to Vehicle
    ]
    relation entity IsPos-XOf [
      from Pos-X
      to Vehicle
      forward isPos-XOf
      reverse hasPos-X
    ] < vim4:Characterizes


    concept Pos-Y < CarlaParameter[
      restricts all vim4:characterizes to Vehicle
    ]   
    relation entity IsPos-YOf [
      from Pos-Y
      to Vehicle
      forward isPos-YOf
      reverse hasPos-Y
    ] < vim4:Characterizes

    concept Pos-Z < CarlaParameter[
      restricts all vim4:characterizes to Vehicle
    ]
    relation entity IsPos-ZOf [
      from Pos-Z
      to Vehicle
      forward isPos-ZOf
      reverse hasPos-Z
    ] < vim4:Characterizes

    concept Velocity < CarlaParameter[
      restricts all vim4:characterizes to Vehicle
    ]
    relation entity IsVelocityOf [
      from Velocity
      to Vehicle
      forward isVelocityOf
      reverse hasVelocity
    ] < vim4:Characterizes

    concept Acceleration < CarlaParameter[
      restricts all vim4:characterizes to Vehicle
    ]
    relation entity IsAccelerationOf [
      from Acceleration
      to Vehicle
      forward isAccelerationOf
      reverse hasAcceleration
    ] < vim4:Characterizes

    concept Orientation < CarlaParameter[
      restricts all vim4:characterizes to Vehicle
    ]
    relation entity IsOrientationOf [
      from Orientation
      to Vehicle
      forward isOrientationOf
      reverse hasOrientation
    ] < vim4:Characterizes

    concept Steering < CarlaParameter[
      restricts all vim4:characterizes to Vehicle
    ]
    relation entity IsSteeringOf [
      from Steering
      to Vehicle
      forward isSteeringOf
      reverse hasSteering
    ] < vim4:Characterizes

    concept VehicleType < CarlaParameter[
      restricts all vim4:characterizes to Vehicle
    ]
    relation entity IsVehicleTypeOf [
      from VehicleType
      to Vehicle
      forward isVehicleTypeOf
      reverse hasVehicleType
    ] < vim4:Characterizes

	aspect ODDElements

    concept Physicalinfrastructure < mission:Component,affectedOEDRElement, connectedElement, ODDElements [

    ]

    concept TrafficParticipants < mission:Component,affectedOEDRElement, connectedElement [

    ]

    concept OperationalConstraints < mission:Component, collectedElement [

    ] 


    concept Zone < mission:Component, collectedElement [

    ]

    concept EnverionmentalCondition < mission:Component,affectedOEDRElement, ODDElements [

    ]

    concept Weather < EnverionmentalCondition [
    ]
	// concept rain < Weather [
    // ]
    concept Illumination < EnverionmentalCondition [
    ]
    concept ParticulateMatter < EnverionmentalCondition [
    ]


    concept IntelligentTransportSystem < Connectivity [
    ]
    concept V2XCommunicationSystem < Connectivity [
    ]
    
	
	concept SchoolZone < Zone [
    ]
    concept Geo-FensingZone < Zone [
    ]
    concept InterferenceZone < Zone [
    ]
    concept TrafficManagementZone < Zone [
    ]
    concept RegionsStates < Zone [
    ]
    
	
	concept SpeedLimit < OperationalConstraints [
    ]
    concept TrafficConditions < OperationalConstraints [
    ]
    
	
	concept NonRoadUser < TrafficParticipants [
    ]
    concept RoadUser < TrafficParticipants [
    ]
    
	
	concept RoadFurniture < Physicalinfrastructure [
    ]
    concept Road < Physicalinfrastructure [
    ]
    concept Signage < Physicalinfrastructure [
    ]
    concept RoadInfrastructure < Physicalinfrastructure [
    ]
    concept RoadMarking < Physicalinfrastructure [
    ]

    aspect affectedOEDRElement [
    ]
    relation entity AffectOEDROf [
        from affectedOEDRElement
        to AutomatedDrivingSystem
        forward affectOEDROf
        reverse isAffectedBy
    ]

	aspect connectedElement [
    ]
	aspect Connectivity [
    ]
    relation entity Connected [
        from Connectivity
        to connectedElement
        forward connected
        reverse connectWith
    ]

	
    relation entity Follow [
        from AutomatedDrivingSystem
        to OperationalConstraints
        forward follow
        reverse isfollowedBy
    ]

	aspect collectedElement [
    ]
    relation entity Collect [
        from Connectivity
        to collectedElement
        forward collect
        reverse collectedBy
    ]

	
    relation entity EnterTo [
        from AutomatedDrivingSystem
        to Zone
        forward enterTo
        reverse enteredBy
    ]


  	relation entity IsJASPARODDOf [
		from JASPARODD
		to  AutomatedDrivingSystemDomain
		forward isJASPARODDOf
		reverse hasJASPARODD
  ]

	relation entity IsEquippedTo [
		from AutomatedDrivingSystem
		to AutomatedVehicle
		forward isEquippedTo
		reverse equippes
		functional
	]


	relation entity IsAVOf[
		from AutomatedVehicle
		to AutomatedDrivingSystemDomain
		forward isAVOf
		reverse hasAV
	]


	relation entity IsPIOf [
		from Physicalinfrastructure
		to  JASPARODD
		forward isPIOf
		reverse hasPI
  ]

	relation entity IsTPOf [
		from TrafficParticipants
		to JASPARODD
		forward isTPOf
		reverse hasTP
		functional

	]

	relation entity IsOCOf [
		from OperationalConstraints
		to  JASPARODD
		forward isOCOf
		reverse hasOC
  ]

  	relation entity IsZoneOf [
		from Zone
		to  JASPARODD
		forward isZoneOf
		reverse hasZone
  ]

  	relation entity IsConnectivityOf [
		from Connectivity
		to  JASPARODD
		forward isConnectivityOf
		reverse hasConnectivity
  ]
  

    	relation entity IsECOf [
		from EnverionmentalCondition
		to  JASPARODD
		forward isECOf
		reverse hasEC
  ]
	// concept Displacement < vim4:InherentUnitaryQuantity [
	// 	restricts vim4:instantiates to iso-80000-3.4:volume
	// ]

//     	relation entity IsWeatherOf [
// 		from Weather
// 		to  EnverionmentalCondition
// 		forward isWeatherOf
// 		reverse hasWeather
//   ]
//     	relation entity IsIlluminationOf [
// 		from Illumination
// 		to  EnverionmentalCondition
// 		forward isIlluminationOf
// 		reverse hasIllumination
	
//   ]    	
        
//         relation entity IsParticulateMatterOf [
// 		from ParticulateMatter
// 		to  EnverionmentalCondition
// 		forward isParticulateMatterOf
// 		reverse hasParticulateMatter
//   ]    	
        
//         relation entity IsIntelligentTransportSystemOf [
// 		from IntelligentTransportSystem
// 		to  Connectivity
// 		forward isIntelligentTransportSystemOf
// 		reverse hasIntelligentTransportSystem
//   ]    	
//         relation entity IsV2XCommunicationSystemOf [
// 		from V2XCommunicationSystem
// 		to  Connectivity
// 		forward isV2XCommunicationSystemOf
// 		reverse hasV2XCommunicationSystem
//   ]
//         relation entity IsSchoolZoneOf [
// 		from SchoolZone
// 		to  Zone
// 		forward isSchoolZoneOf
// 		reverse hasSchoolZone
//   ]
//         relation entity IsGeo-FensingZoneOf [
// 		from Geo-FensingZone
// 		to  Zone
// 		forward isGeo-FensingZoneOf
// 		reverse hasGeo-FensingZone
//   ]

//         relation entity IsInterferenceZoneOf [
// 		from InterferenceZone
// 		to  Zone
// 		forward isInterferenceZoneOf
// 		reverse hasInterferenceZone
//   ]
//         relation entity IsTrafficManagementZoneOf [
// 		from TrafficManagementZone
// 		to  Zone
// 		forward isTrafficManagementZoneOf
// 		reverse hasTrafficManagementZone
//   ]
//         relation entity IsRegionsStatesOf [
// 		from RegionsStates
// 		to  Zone
// 		forward isRegionsStatesOf
// 		reverse hasRegionsStates
//   ]
//         relation entity IsSpeedLimitOf [
// 		from SpeedLimit
// 		to  OperationalConstraints
// 		forward isSpeedLimitOf
// 		reverse hasSpeedLimit
//   ]
//         relation entity IsTrafficConditionsOf [
// 		from TrafficConditions
// 		to  OperationalConstraints
// 		forward isTrafficConditionsOf
// 		reverse hasTrafficConditions
//   ]
//         relation entity IsNonRoadUserOf [
// 		from NonRoadUser
// 		to  TrafficParticipants
// 		forward isNonRoadUserOf
// 		reverse hasNonRoadUser
//   ]
//         relation entity IsRoadUserOf [
// 		from RoadUser
// 		to  TrafficParticipants
// 		forward isRoadUserOf
// 		reverse hasRoadUser
//   ]
//         relation entity IsRFOf [
// 		from RoadFurniture
// 		to  Physicalinfrastructure
// 		forward isRoadFurnitureOf
// 		reverse hasRoadFurniture
//   ]

//         relation entity IsRoadOf [
// 		from Road
// 		to  Physicalinfrastructure
// 		forward isRoadOf
// 		reverse hasRoad
//   ]
//         relation entity IsSignageOf [
// 		from Signage
// 		to  Physicalinfrastructure
// 		forward isSignageOf
// 		reverse hasSignage
//   ]
//         relation entity IsRoadInfrastructureOf [
// 		from RoadInfrastructure
// 		to  Physicalinfrastructure
// 		forward isRoadInfrastructureOf
// 		reverse hasRoadInfrastructure
//   ]
//         relation entity IsRoadMarkingOf [
// 		from RoadMarking
// 		to  Physicalinfrastructure
// 		forward isRoadMarkingOf
// 		reverse hasRoadMarking
//   ]

}
